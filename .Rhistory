drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
# prepare a data frame for base lines
base_data <- merge_slp_longer %>%
group_by(month) %>%
summarize(start=min(id), end=max(id) - empty_bar) %>%
rowwise() %>%
mutate(title=mean(c(start, end)))
# prepare a data frame for grid (scales)
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1,]
# Make the plot
plot5 <- ggplot(merge_slp_longer) +
geom_bar(aes(x=as.factor(id), y=value, fill=in_bed), stat="identity", alpha=0.5) +
scale_fill_viridis(discrete=TRUE) +
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 250, xend = start, yend = 250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 500, xend = start, yend = 500), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 750, xend = start, yend = 750), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1000, xend = start, yend = 1000), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1250, xend = start, yend = 1250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
annotate("text", x = rep(max(data$id),6), y = c(0, 250, 500, 750, 1000, 1250),
label = c("0", "250", "500", "750", "1000", "1200") , color="grey",
size=6 , angle=0, fontface="bold", hjust=1) +
ylim(-150,max(label_data$tot, na.rm=T)) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=tot+10, label=day, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -18, label=in_bed), hjust=c(1,1,0,0), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
plot5
rlang::last_error()
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
# prepare a data frame for base lines
base_data <- merge_slp_longer %>%
group_by(month) %>%
summarize(start=min(id), end=max(id) - empty_bar) %>%
rowwise() %>%
mutate(title=mean(c(start, end)))
# prepare a data frame for grid (scales)
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1,]
# Make the plot
plot5 <- ggplot(merge_slp_longer) +
geom_bar(aes(x=as.factor(id), y=value, fill=in_bed), stat="identity", alpha=0.5) +
scale_fill_viridis(discrete=TRUE) +
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 250, xend = start, yend = 250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 500, xend = start, yend = 500), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 750, xend = start, yend = 750), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1000, xend = start, yend = 1000), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1250, xend = start, yend = 1250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
annotate("text", x = rep(max(data$id),6), y = c(0, 250, 500, 750, 1000, 1250),
label = c("0", "250", "500", "750", "1000", "1200") , color="grey",
size=6 , angle=0, fontface="bold", hjust=1) +
ylim(-150,max(label_data$tot, na.rm=T)) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() #+
#geom_text(data=label_data, aes(x=id, y=tot+10, label=day, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
#geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
#geom_text(data=base_data, aes(x = title, y = -18, label=in_bed), hjust=c(1,1,0,0), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
plot5
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))%>%
complete.cases()
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))%>%
drop_na(value)
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))%>%
drop_na(day)
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
# prepare a data frame for base lines
base_data <- merge_slp_longer %>%
group_by(month) %>%
summarize(start=min(id), end=max(id) - empty_bar) %>%
rowwise() %>%
mutate(title=mean(c(start, end)))
# prepare a data frame for grid (scales)
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1,]
# Make the plot
plot5 <- ggplot(merge_slp_longer) +
geom_bar(aes(x=as.factor(id), y=value, fill=in_bed), stat="identity", alpha=0.5) +
scale_fill_viridis(discrete=TRUE) +
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 250, xend = start, yend = 250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 500, xend = start, yend = 500), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 750, xend = start, yend = 750), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1000, xend = start, yend = 1000), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 1250, xend = start, yend = 1250), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
annotate("text", x = rep(max(data$id),6), y = c(0, 250, 500, 750, 1000, 1250),
label = c("0", "250", "500", "750", "1000", "1200") , color="grey",
size=6 , angle=0, fontface="bold", hjust=1) +
ylim(-150,max(label_data$tot, na.rm=T)) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() #+
#geom_text(data=label_data, aes(x=id, y=tot+10, label=day, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
#geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
#geom_text(data=base_data, aes(x = title, y = -18, label=in_bed), hjust=c(1,1,0,0), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
plot5
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
empty_bar <- 2
nObsType <- nlevels(as.factor(merge_slp_longer$in_bed))
to_add <- data.frame(matrix(NA, empty_bar*nlevels(merge_slp_longer$month)*nObsType, ncol(merge_slp_longer)))
colnames(to_add) <- colnames(merge_slp_longer)
to_add$month <- rep(levels(merge_slp_longer$month), each=empty_bar*nObsType)
merge_slp_longer <- rbind(merge_slp_longer, to_add)
merge_slp_longer <- merge_slp_longer %>% arrange(month, day)
merge_slp_longer$id <- rep(seq(1, nrow(merge_slp_longer)/nObsType), each=nObsType)
# Get the name and the y position of each label
label_data <- merge_slp_longer %>%
group_by(id, day) %>%
summarize(tot=sum(value))%>%
drop_na(day)
View(label_data)
View(label_data)
View(label_data)
number_of_bar <- label_data%>%
group_by(day)%>%nrow(label_data)
View(label_data)
table(label_data$day)
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
#set up the main structure of the plot
plot5 <- ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
#ignore warning message “Using alpha for a discrete variable is not advised.”
geom_bar(stat = "identity", position = "dodge", aes(fill = in_bed)) +
#use polar coordinate
coord_polar(start = 0) +
ylim(-40,90) +
#add color arc to highlight ACL00 and a dummy black arc
geom_bar(stat = "identity", aes(x = in_bed, y = -2, fill = in_bed)) +
geom_bar(stat = "identity", aes(x = in_bed, y = -1), fill = "black") +
#use colorbrewer palette Dark2
scale_fill_brewer(palette = "Dark2") +
#facet to get one plot per Country
facet_wrap(~ GEO, nrow = 4) +
#final tuning
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(color = "white"),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.background = element_rect(fill = "black"))
plot5
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
#set up the main structure of the plot
plot5 <- ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
#ignore warning message “Using alpha for a discrete variable is not advised.”
geom_bar(stat = "identity", position = "dodge", aes(fill = in_bed)) +
#use polar coordinate
coord_polar(start = 0) +
ylim(-40,90) +
#add color arc to highlight ACL00 and a dummy black arc
geom_bar(stat = "identity", aes(x = in_bed, y = -2, fill = in_bed)) +
geom_bar(stat = "identity", aes(x = in_bed, y = -1), fill = "black") +
#use colorbrewer palette Dark2
scale_fill_brewer(palette = "Dark2") +
#facet to get one plot per Country
facet_wrap(~ month, nrow = 4) +
#final tuning
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(color = "white"),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.background = element_rect(fill = "black"))
plot5
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
#set up the main structure of the plot
plot5 <- ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
#ignore warning message “Using alpha for a discrete variable is not advised.”
geom_bar(stat = "identity", position = "dodge", aes(fill = in_bed)) +
#use polar coordinate
coord_polar(start = 0) +
ylim(-40,90) +
#add color arc to highlight ACL00 and a dummy black arc
geom_bar(stat = "identity", aes(x = in_bed, y = -2, fill = in_bed)) +
geom_bar(stat = "identity", aes(x = in_bed, y = -1), fill = "black") +
#use colorbrewer palette Dark2
scale_fill_brewer(palette = "Dark2") +
#facet to get one plot per Country
facet_wrap(~ month, nrow = 4) +
#final tuning
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(color = "white"),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.background = element_rect(fill = "black"))
plot5
plot5<-ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
geom_col(fill = "in_bed", alpha=1, width=1)+
geom_hline(yintercept = seq(0, 100, by = 10), color ="grey", size = 1) +
geom_vline(xintercept = seq(.5, 16.5, by = 1), color ="grey", size = 1) +
coord_polar()+
facet_wrap(vars(month))
plot5
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
#set up the main structure of the plot
plot5 <- ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
#ignore warning message “Using alpha for a discrete variable is not advised.”
geom_bar(stat = "identity", position = "dodge", aes(fill = in_bed)) +
#use polar coordinate
coord_polar(start = 0) +
ylim(-40,90) +
#add color arc to highlight ACL00 and a dummy black arc
geom_bar(stat = "identity", aes(x = in_bed, y = -2, fill = in_bed)) +
geom_bar(stat = "identity", aes(x = in_bed, y = -1), fill = "black") +
#use colorbrewer palette Dark2
scale_fill_brewer(palette = "Dark2") +
#facet to get one plot per Country
facet_wrap(~ month, nrow = 4) +
#final tuning
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(color = "white"),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.background = element_rect(fill = "black"))
plot5
plot5<-ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
geom_col(fill = in_bed, alpha=1, width=1)+
geom_hline(yintercept = seq(0, 100, by = 10), color ="grey", size = 1) +
geom_vline(xintercept = seq(.5, 16.5, by = 1), color ="grey", size = 1) +
coord_polar()+
facet_wrap(vars(month))
#create month and day columns
merge_slp<-merge%>%
mutate(day=wday(date, label=TRUE),
month=month(date, label = TRUE),
year=year(date))%>%
select(11:13, 28:29)
#Create a column with month and year
#merge_slp<-merge_alt%>%
# mutate(period=as.yearmon(paste(year, month), "%Y %m"))
#merge_alt$period<-as.Date(merge_alt$period)#To allow mapping easier
merge_slp<-merge_slp%>%
drop_na(minutesAsleep)
merge_slp_longer<-merge_slp%>%
pivot_longer(cols = c(2:4),
names_to="in_bed",
values_to="value")
#set up the main structure of the plot
plot5 <- ggplot(merge_slp_longer, aes(x = in_bed, y = value)) +
#ignore warning message “Using alpha for a discrete variable is not advised.”
geom_bar(stat = "identity", position = "dodge", aes(fill = in_bed)) +
#use polar coordinate
coord_polar(start = 0) +
ylim(-40,90) +
#add color arc to highlight ACL00 and a dummy black arc
geom_bar(stat = "identity", aes(x = in_bed, y = -2, fill = in_bed)) +
geom_bar(stat = "identity", aes(x = in_bed, y = -1), fill = "black") +
#use colorbrewer palette Dark2
scale_fill_brewer(palette = "Dark2") +
#facet to get one plot per Country
facet_wrap(~ month, nrow = 4) +
#final tuning
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(color = "white"),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.background = element_rect(fill = "black"))
plot5
plot5<-ggplot(merge_slp_longer, aes(x = in_bed, y = value, fill=in_bed)) +
geom_hline(yintercept = seq(0, 100, by = 10), color ="grey", size = 1) +
geom_vline(xintercept = seq(.5, 16.5, by = 1), color ="grey", size = 1) +
coord_polar()+
facet_wrap(vars(month))
plot5
